spring.application.name=preco-maximo-consumidor-medicamentos-api

# ===============================================
# CONFIGURAÇÃO DO BANCO DE DADOS (POSTGRESQL)
# ===============================================
# URL de conexão com o banco de dados
spring.datasource.url=${DB_URL}

# Usuário do banco de dados
spring.datasource.username=${DB_USERNAME}

# Senha do banco de dados
spring.datasource.password=${DB_PASSWORD}

# Driver JDBC do PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================================
# CONFIGURAÇÃO DO JPA/HIBERNATE
# ===============================================
# Estratégia de geração do schema. 'validate' é a mais segura para produção.
spring.jpa.hibernate.ddl-auto=validate

# Desabilita o padrão "Open Session in View" para melhorar a performance
# e o controle sobre as transações de banco de dados.
spring.jpa.open-in-view=false

# Exibe o SQL gerado pelo Hibernate no console (útil para debug)
spring.jpa.show-sql=true

# Formata o SQL exibido para melhor legibilidade
spring.jpa.properties.hibernate.format_sql=true

# ===============================================
# CONFIGURAÇÃO DO ELASTICSEARCH
# ===============================================
# Endereço do nó do Elasticsearch
spring.elasticsearch.uris=${ELASTICSEARCH_ENDPOINT}

# ===============================================
# CONFIGURAÇÃO DE SEGURANÇA (OAUTH2/KEYCLOAK)
# ===============================================
# URL do emissor (issuer) do token JWT. Spring usará isso para autoconfigurar a validação.
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_TOKEN_EMISSOR_URL}

# ===============================================
# CONFIGURAÇÃO DO SWAGGER/OPENAPI
# ===============================================
keycloak.authorization-url=${KEYCLOAK_AUTHORIZATION_URL}
keycloak.token-url=${KEYCLOAK_TOKEN_URL}

# ===============================================
# CONFIGURAÇÃO DE LOGS DE SEGURANÇA
# ===============================================
# Nível de log geral para o Spring Security.
logging.level.org.springframework.security=TRACE

# Nível de log para a camada web do Spring Security.
logging.level.org.springframework.security.web=DEBUG

# Nível de log específico para o servidor de recursos OAuth2/JWT.
logging.level.org.springframework.security.oauth2=DEBUG